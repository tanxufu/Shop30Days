// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ShopAPI.Models
{
    public partial class ShopAPIContext : DbContext
    {
        public ShopAPIContext()
        {
        }

        public ShopAPIContext(DbContextOptions<ShopAPIContext> options)
            : base(options)
        {
        }

        public virtual DbSet<BankCard> BankCards { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<DeliveryMethod> DeliveryMethods { get; set; }
        public virtual DbSet<FavoriteProduct> FavoriteProducts { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderItem> OrderItems { get; set; }
        public virtual DbSet<PaymentMethod> PaymentMethods { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductSize> ProductSizes { get; set; }
        public virtual DbSet<User> Users { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<BankCard>(entity =>
            {
                entity.HasKey(e => e.CardId)
                    .HasName("PK__BankCard__BDF201DD0634F0D3");

                entity.ToTable("BankCard");

                entity.Property(e => e.CardId).HasColumnName("card_id");

                entity.Property(e => e.BankName)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("bank_name");

                entity.Property(e => e.CardNumber)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("card_number");

                entity.Property(e => e.CardholderName)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("cardholder_name");

                entity.Property(e => e.Cvv)
                    .IsRequired()
                    .HasMaxLength(32)
                    .HasColumnName("cvv");

                entity.Property(e => e.ExpiryDate)
                    .IsRequired()
                    .HasMaxLength(7)
                    .HasColumnName("expiry_date");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.BankCards)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK__BankCard__user_i__145C0A3F");
            });

            modelBuilder.Entity<Category>(entity =>
            {
                entity.Property(e => e.CategoryId).HasColumnName("category_id");

                entity.Property(e => e.CategoryName)
                    .IsRequired()
                    .HasMaxLength(256)
                    .HasColumnName("category_name");
            });

            modelBuilder.Entity<DeliveryMethod>(entity =>
            {
                entity.HasKey(e => e.MethodId)
                    .HasName("PK__Delivery__747727B68E41EDC3");

                entity.Property(e => e.MethodId)
                    .HasMaxLength(32)
                    .HasColumnName("method_id");

                entity.Property(e => e.MethodName)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("method_name");
            });

            modelBuilder.Entity<FavoriteProduct>(entity =>
            {
                entity.HasKey(e => e.FavoriteId)
                    .HasName("PK__Favorite__46ACF4CBEEAA2D4E");

                entity.Property(e => e.FavoriteId).HasColumnName("favorite_id");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(32)
                    .HasColumnName("product_id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.Product)
                    .WithMany(p => p.FavoriteProducts)
                    .HasForeignKey(d => d.ProductId)
                    .HasConstraintName("FK__FavoriteP__produ__1FCDBCEB");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.FavoriteProducts)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK__FavoriteP__user___1ED998B2");
            });

            modelBuilder.Entity<Order>(entity =>
            {
                entity.Property(e => e.OrderId)
                    .HasMaxLength(64)
                    .HasColumnName("order_id");

                entity.Property(e => e.BarcodeNumber)
                    .HasMaxLength(64)
                    .HasColumnName("barcode_number");

                entity.Property(e => e.DeliStatus)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("deli_status");

                entity.Property(e => e.DeliveryMethodId)
                    .HasMaxLength(32)
                    .HasColumnName("delivery_method_id");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasColumnName("order_date");

                entity.Property(e => e.PayStatus)
                    .HasColumnName("pay_status")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PaymentMethodId)
                    .HasMaxLength(32)
                    .HasColumnName("payment_method_id");

                entity.Property(e => e.Quantity).HasColumnName("quantity");

                entity.Property(e => e.TotalAmount)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("total_amount");

                entity.Property(e => e.UserId).HasColumnName("user_id");
            });

            modelBuilder.Entity<OrderItem>(entity =>
            {
                entity.Property(e => e.OrderItemId)
                    .HasMaxLength(64)
                    .HasColumnName("order_item_id");

                entity.Property(e => e.OrderId)
                    .HasMaxLength(64)
                    .HasColumnName("order_id");

                entity.Property(e => e.Price)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("price");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(32)
                    .HasColumnName("product_id");

                entity.Property(e => e.ProductQuantity).HasColumnName("product_quantity");

                entity.HasOne(d => d.Product)
                    .WithMany(p => p.OrderItems)
                    .HasForeignKey(d => d.ProductId)
                    .HasConstraintName("FK__OrderItem__produ__2D27B809");
            });

            modelBuilder.Entity<PaymentMethod>(entity =>
            {
                entity.HasKey(e => e.MethodId)
                    .HasName("PK__PaymentM__747727B6F4849A0A");

                entity.Property(e => e.MethodId)
                    .HasMaxLength(32)
                    .HasColumnName("method_id");

                entity.Property(e => e.MethodName)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("method_name");
            });

            modelBuilder.Entity<Product>(entity =>
            {
                entity.Property(e => e.ProductId)
                    .HasMaxLength(32)
                    .HasColumnName("product_id");

                entity.Property(e => e.CategoryId).HasColumnName("category_id");

                entity.Property(e => e.ColorHex)
                    .HasMaxLength(32)
                    .HasColumnName("color_hex");

                entity.Property(e => e.ColorName)
                    .HasMaxLength(128)
                    .HasColumnName("color_name");

                entity.Property(e => e.Description).HasColumnName("description");

                entity.Property(e => e.ImageUrl)
                    .HasMaxLength(264)
                    .HasColumnName("image_url");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name");

                entity.Property(e => e.Price)
                    .HasColumnType("decimal(18, 3)")
                    .HasColumnName("price");

                entity.Property(e => e.Stock).HasColumnName("stock");

                entity.HasOne(d => d.Category)
                    .WithMany(p => p.Products)
                    .HasForeignKey(d => d.CategoryId)
                    .HasConstraintName("FK__Products__catego__1920BF5C");
            });

            modelBuilder.Entity<ProductSize>(entity =>
            {
                entity.Property(e => e.ProductSizeId)
                    .HasMaxLength(32)
                    .HasColumnName("product_size_id");

                entity.Property(e => e.ProductId)
                    .HasMaxLength(32)
                    .HasColumnName("product_id");

                entity.Property(e => e.Size)
                    .IsRequired()
                    .HasMaxLength(4)
                    .HasColumnName("size");

                entity.Property(e => e.Stock).HasColumnName("stock");

                entity.HasOne(d => d.Product)
                    .WithMany(p => p.ProductSizes)
                    .HasForeignKey(d => d.ProductId)
                    .HasConstraintName("FK__ProductSi__produ__1BFD2C07");
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.HasIndex(e => e.Email, "UQ__Users__AB6E616498478DDF")
                    .IsUnique();

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.Property(e => e.BarcodeNumber)
                    .HasMaxLength(64)
                    .HasColumnName("barcode_number");

                entity.Property(e => e.City)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("city");

                entity.Property(e => e.District)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("district");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("email");

                entity.Property(e => e.HouseNumber)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("house_number");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("name");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("password");

                entity.Property(e => e.PhoneNumber)
                    .IsRequired()
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("phone_number");

                entity.Property(e => e.TypeAccount)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("type_account");

                entity.Property(e => e.Ward)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("ward");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}